/* Generated by the Nim Compiler v2.0.8 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI905969733 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI671088653 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI134217745 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217742 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217749 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217751 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554435 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI33555838 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555173 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555181 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554449 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI33554450 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555180 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555177 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555178 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217741 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217743 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI134217743 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217743.node = NNI134217743;
var NNI134217741 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217741.node = NNI134217741;
var NNI33555178 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555178.node = NNI33555178;
NTI33555180.base = NTI33555177;
NTI33555181.base = NTI33555177;
var NNI33555177 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555180, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554449, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555181, name: "up", sons: null}]};
NTI33555177.node = NNI33555177;
var NNI33555173 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555173.node = NNI33555173;
NTI33555177.base = NTI33555173;
NTI33555178.base = NTI33555177;
NTI134217741.base = NTI33555178;
NTI134217743.base = NTI134217741;
var NNI33555838 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554450, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554450, name: "Field2", sons: null}]};
NTI33555838.node = NNI33555838;
var NNI134217751 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217751.node = NNI134217751;
NTI134217751.base = NTI33555178;
var NNI134217749 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217749.node = NNI134217749;
NTI134217749.base = NTI33555178;
var NNI134217742 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217742.node = NNI134217742;
NTI134217742.base = NTI134217741;
var NNI134217745 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217745.node = NNI134217745;
NTI134217745.base = NTI33555178;
NTI671088653.base = NTI33554435;
var NNI905969733 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554435, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI905969733.node = NNI905969733;

function mnewString(len_33557003) {
        var result = new Array(len_33557003);
    for (var i = 0; i < len_33557003; i++) {result[i] = 0;}
    return result;
  

  
}

function arrayConstr(len_33557314, value_33557315, typ_33557316) {
        var result = new Array(len_33557314);
    for (var i = 0; i < len_33557314; ++i) result[i] = nimCopy(null, value_33557315, typ_33557316);
    return result;
  

  
}

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557268, src_33557269, ti_33557270) {
  var result_33557279 = null;

    switch (ti_33557270.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557259(ti_33557270))) {
      result_33557279 = src_33557269;
      }
      else {
        result_33557279 = [src_33557269[0], src_33557269[1]];
      }
      
      break;
    case 19:
            if (dest_33557268 === null || dest_33557268 === undefined) {
        dest_33557268 = {};
      }
      else {
        for (var key in dest_33557268) { delete dest_33557268[key]; }
      }
      for (var key in src_33557269) { dest_33557268[key] = src_33557269[key]; }
      result_33557279 = dest_33557268;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557270.base == null))) {
      result_33557279 = nimCopy(dest_33557268, src_33557269, ti_33557270.base);
      }
      else {
      if ((ti_33557270.kind == 17)) {
      result_33557279 = (dest_33557268 === null || dest_33557268 === undefined) ? {m_type: ti_33557270} : dest_33557268;
      }
      else {
        result_33557279 = (dest_33557268 === null || dest_33557268 === undefined) ? {} : dest_33557268;
      }
      }
      nimCopyAux(result_33557279, src_33557269, ti_33557270.node);
      break;
    case 4:
    case 16:
            if(ArrayBuffer.isView(src_33557269)) { 
        if(dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
          dest_33557268 = new src_33557269.constructor(src_33557269);
        } else {
          dest_33557268.set(src_33557269, 0);
        }
        result_33557279 = dest_33557268;
      } else {
        if (src_33557269 === null) {
          result_33557279 = null;
        }
        else {
          if (dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
            dest_33557268 = new Array(src_33557269.length);
          }
          result_33557279 = dest_33557268;
          for (var i = 0; i < src_33557269.length; ++i) {
            result_33557279[i] = nimCopy(result_33557279[i], src_33557269[i], ti_33557270.base);
          }
        }
      }
    
      break;
    case 24:
    case 27:
            if (src_33557269 === null) {
        result_33557279 = null;
      }
      else {
        if (dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
          dest_33557268 = new Array(src_33557269.length);
        }
        result_33557279 = dest_33557268;
        for (var i = 0; i < src_33557269.length; ++i) {
          result_33557279[i] = nimCopy(result_33557279[i], src_33557269[i], ti_33557270.base);
        }
      }
    
      break;
    case 28:
            if (src_33557269 !== null) {
        result_33557279 = src_33557269.slice(0);
      }
    
      break;
    default: 
      result_33557279 = src_33557269;
      break;
    }

  return result_33557279;

}

function cstrToNimstr(c_33556898) {
      var ln = c_33556898.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556898.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556898.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}

function toJSStr(s_33556901) {
  var result_33556902 = null;

    var res_33556943 = newSeq_33556919((s_33556901).length);
    var i_33556944 = 0;
    var j_33556945 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_33556944 < (s_33556901).length)) break Label2;
          var c_33556946 = s_33556901[i_33556944];
          if ((c_33556946 < 128)) {
          res_33556943[j_33556945] = String.fromCharCode(c_33556946);
          i_33556944 += 1;
          }
          else {
            var helper_33556959 = newSeq_33556919(0);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556960 = c_33556946.toString(16);
                  if ((((code_33556960) == null ? 0 : (code_33556960).length) == 1)) {
                  helper_33556959.push("%0");;
                  }
                  else {
                  helper_33556959.push("%");;
                  }
                  
                  helper_33556959.push(code_33556960);;
                  i_33556944 += 1;
                  if ((((s_33556901).length <= i_33556944) || (s_33556901[i_33556944] < 128))) {
                  break Label3;
                  }
                  
                  c_33556946 = s_33556901[i_33556944];
                }
            };
++excHandler;
            try {
            res_33556943[j_33556945] = decodeURIComponent(helper_33556959.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            res_33556943[j_33556945] = helper_33556959.join("");
            lastJSError = prevJSError;
            } finally {
            }
          }
          
          j_33556945 += 1;
        }
    };
    if (res_33556943.length < j_33556945) { for (var i = res_33556943.length ; i < j_33556945 ; ++i) res_33556943.push(null); }
               else { res_33556943.length = j_33556945; };
    result_33556902 = res_33556943.join("");

  return result_33556902;

}

function raiseException(e_33556653, ename_33556654) {
    e_33556653.name = ename_33556654;
    if ((excHandler == 0)) {
    unhandledException(e_33556653);
    }
    
    e_33556653.trace = nimCopy(null, rawWriteStackTrace_33556604(), NTI33554449);
    throw e_33556653;

  
}

function addInt(a_33557050, b_33557051) {
        var result = a_33557050 + b_33557051;
    checkOverflowInt(result);
    return result;
  

  
}

function chckRange(i_33557324, a_33557325, b_33557326) {
  var result_33557327 = 0;

  BeforeRet: {
    if (((a_33557325 <= i_33557324) && (i_33557324 <= b_33557326))) {
    result_33557327 = i_33557324;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  };

  return result_33557327;

}

function chckIndx(i_33557319, a_33557320, b_33557321) {
  var result_33557322 = 0;

  BeforeRet: {
    if (((a_33557320 <= i_33557319) && (i_33557319 <= b_33557321))) {
    result_33557322 = i_33557319;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_33557319, a_33557320, b_33557321);
    }
    
  };

  return result_33557322;

}

function subInt(a_33557054, b_33557055) {
        var result = a_33557054 - b_33557055;
    checkOverflowInt(result);
    return result;
  

  
}

function divInt(a_33557062, b_33557063) {
        if (b_33557063 == 0) raiseDivByZero();
    if (b_33557063 == -1 && a_33557062 == 2147483647) raiseOverflow();
    return Math.trunc(a_33557062 / b_33557063);
  

  
}

function makeNimstrLit(c_33556895) {
      var result = [];
  for (var i = 0; i < c_33556895.length; ++i) {
    result[i] = c_33556895.charCodeAt(i);
  }
  return result;
  

  
}

function rawEcho() {
          var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

  
}

function addChar(x_33557415, c_33557416) {
    x_33557415.push(c_33557416);

  
}
var F = {procname: "module dom", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/js/dom.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module dom", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/js/dom.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module underscored_calls", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/std/private/underscored_calls.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module underscored_calls", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/std/private/underscored_calls.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sugar", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/pure/sugar.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sugar", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/pure/sugar.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/std/jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/std/jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsutils", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/std/private/jsutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsutils", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/std/private/jsutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/pure/hashes.nim", line: 0};
framePtr = F;
F.line = 218;
F.filename = "hashes.nim";
var objectID_838860977 = [0];
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/pure/hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops_utils", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/std/private/bitops_utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops_utils", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/std/private/bitops_utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/system/countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/system/countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/pure/math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/pure/math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module outparams", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/std/outparams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module outparams", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/std/outparams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/js/jsffi.nim", line: 0};
framePtr = F;
F.line = 45;
F.filename = "jsffi.nim";
F.line = 46;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module utils", prev: framePtr, filename: "/home/runner/Quill/src/quill/utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module utils", prev: framePtr, filename: "/home/runner/Quill/src/quill/utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module quill", prev: framePtr, filename: "/home/runner/Quill/src/quill.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module quill", prev: framePtr, filename: "/home/runner/Quill/src/quill.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strbasics", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/std/strbasics.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strbasics", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/std/strbasics.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/pure/typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/pure/typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/std/enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/std/enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strimpl", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/std/private/strimpl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strimpl", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/std/private/strimpl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strformat", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/pure/strformat.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strformat", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/pure/strformat.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jscore", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/js/jscore.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jscore", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/js/jscore.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module gutters", prev: framePtr, filename: "/home/runner/Quill/src/quill/ext/gutters.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module gutters", prev: framePtr, filename: "/home/runner/Quill/src/quill/ext/gutters.nim", line: 0};
framePtr = F;
framePtr = F.prev;

function newQuill_671088666(e_671088667, height_671088668) {
  var result_671088669 = null;

  var F = {procname: "quill.newQuill", prev: framePtr, filename: "/home/runner/Quill/src/quill.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 128;
    F.filename = "quill.nim";
    var q_671088670 = document.createElement("div");
    F.line = 129;
    q_671088670.className = "quill";
    F.line = 130;
    document.documentElement.setAttribute("style", ("--quill-height: " + height_671088668));
    F.line = 131;
    var textEditor_671088671 = document.createElement("textarea");
    F.line = 132;
    textEditor_671088671.className = "quill-sizing quill-invis";
    F.line = 133;
    textEditor_671088671.setAttribute("spellcheck", "false");
    F.line = 135;
    var body_671088672 = document.createElement("pre");
    F.line = 136;
    body_671088672.className = "quill-sizing quill-text";
    F.line = 137;
    body_671088672.appendChild(document.createElement("span"));
    F.line = 138;
    var wrap_671088673 = document.createElement("div");
    F.line = 139;
    wrap_671088673.className = "quill-wrap";
    F.line = 140;
    q_671088670.appendChild(body_671088672);
    F.line = 141;
    q_671088670.appendChild(textEditor_671088671);
    F.line = 142;
    wrap_671088673.appendChild(q_671088670);
    F.line = 143;
    e_671088667.appendChild(wrap_671088673);
    F.line = 144;
    result_671088669 = {internalElm: q_671088670, sectors: [0], plen: 0, onDraw: null, current: 0};
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_671088669;

}

function eventElement_671088748(q_671088749) {
  var result_671088750 = null;

  var F = {procname: "quill.eventElement", prev: framePtr, filename: "/home/runner/Quill/src/quill.nim", line: 0};
  framePtr = F;
    F.line = 149;
    F.filename = "quill.nim";
    result_671088750 = q_671088749.internalElm.childNodes[1];
  framePtr = F.prev;

  return result_671088750;

}

function textHEX3D_671088757(q_671088758, q_671088758_Idx, replacment_671088759) {
  var F = {procname: "quill.text=", prev: framePtr, filename: "/home/runner/Quill/src/quill.nim", line: 0};
  framePtr = F;
    F.line = 160;
    F.filename = "quill.nim";
    eventElement_671088748(q_671088758[q_671088758_Idx]).value = replacment_671088759;
  framePtr = F.prev;

  
}

function add_33556373(x_33556374, x_33556374_Idx, y_33556375) {
          if (x_33556374[x_33556374_Idx] === null) { x_33556374[x_33556374_Idx] = []; }
      var off = x_33556374[x_33556374_Idx].length;
      x_33556374[x_33556374_Idx].length += y_33556375.length;
      for (var i = 0; i < y_33556375.length; ++i) {
        x_33556374[x_33556374_Idx][off+i] = y_33556375.charCodeAt(i);
      }
    

  
}

function isFatPointer_33557259(ti_33557260) {
  var result_33557261 = false;

  BeforeRet: {
    result_33557261 = !((ConstSet1[ti_33557260.base.kind] != undefined));
    break BeforeRet;
  };

  return result_33557261;

}

function nimCopyAux(dest_33557272, src_33557273, n_33557274) {
    switch (n_33557274.kind) {
    case 0:
      break;
    case 1:
            dest_33557272[n_33557274.offset] = nimCopy(dest_33557272[n_33557274.offset], src_33557273[n_33557274.offset], n_33557274.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557274.sons.length; i++) {
      nimCopyAux(dest_33557272, src_33557273, n_33557274.sons[i]);
    }
    
      break;
    case 3:
            dest_33557272[n_33557274.offset] = nimCopy(dest_33557272[n_33557274.offset], src_33557273[n_33557274.offset], n_33557274.typ);
      for (var i = 0; i < n_33557274.sons.length; ++i) {
        nimCopyAux(dest_33557272, src_33557273, n_33557274.sons[i][1]);
      }
    
      break;
    }

  
}

function auxWriteStackTrace_33556508(f_33556509) {
  var result_33556510 = [[]];

    var it_33556518 = f_33556509;
    var i_33556519 = 0;
    var total_33556520 = 0;
    var tempFrames_33556521 = arrayConstr(64, {Field0: null, Field1: 0, Field2: null}, NTI33555838);
    Label1: {
        Label2: while (true) {
        if (!(!((it_33556518 == null)) && (i_33556519 <= 63))) break Label2;
          tempFrames_33556521[i_33556519].Field0 = it_33556518.procname;
          tempFrames_33556521[i_33556519].Field1 = it_33556518.line;
          tempFrames_33556521[i_33556519].Field2 = it_33556518.filename;
          i_33556519 += 1;
          total_33556520 += 1;
          it_33556518 = it_33556518.prev;
        }
    };
    Label3: {
        Label4: while (true) {
        if (!!((it_33556518 == null))) break Label4;
          total_33556520 += 1;
          it_33556518 = it_33556518.prev;
        }
    };
    result_33556510[0] = nimCopy(null, [], NTI33554449);
    if (!((total_33556520 == i_33556519))) {
    result_33556510[0].push.apply(result_33556510[0], [40]);;
    result_33556510[0].push.apply(result_33556510[0], HEX24_369098760((total_33556520 - i_33556519)));;
    result_33556510[0].push.apply(result_33556510[0], [32,99,97,108,108,115,32,111,109,105,116,116,101,100,41,32,46,46,46,10]);;
    }
    
    Label5: {
      var j_33556554 = 0;
      var colontmp__536871035 = 0;
      colontmp__536871035 = (i_33556519 - 1);
      var res_536871037 = colontmp__536871035;
      Label6: {
          Label7: while (true) {
          if (!(0 <= res_536871037)) break Label7;
            j_33556554 = res_536871037;
            result_33556510[0].push.apply(result_33556510[0], cstrToNimstr(tempFrames_33556521[j_33556554].Field2));;
            if ((0 < tempFrames_33556521[j_33556554].Field1)) {
            result_33556510[0].push.apply(result_33556510[0], [40]);;
            addInt_301990129(result_33556510, 0, tempFrames_33556521[j_33556554].Field1);
            if (false) {
            result_33556510[0].push.apply(result_33556510[0], [44,32]);;
            addInt_301990129(result_33556510, 0, 0);
            }
            
            result_33556510[0].push.apply(result_33556510[0], [41]);;
            }
            
            result_33556510[0].push.apply(result_33556510[0], [32,97,116,32]);;
            add_33556373(result_33556510, 0, tempFrames_33556521[j_33556554].Field0);
            result_33556510[0].push.apply(result_33556510[0], [10]);;
            res_536871037 -= 1;
          }
      };
    };

  return result_33556510[0];

}

function rawWriteStackTrace_33556604() {
  var result_33556605 = [];

    if (!((framePtr == null))) {
    result_33556605 = nimCopy(null, ([84,114,97,99,101,98,97,99,107,32,40,109,111,115,116,32,114,101,99,101,110,116,32,99,97,108,108,32,108,97,115,116,41,10] || []).concat(auxWriteStackTrace_33556508(framePtr) || []), NTI33554449);
    }
    else {
      result_33556605 = nimCopy(null, [78,111,32,115,116,97,99,107,32,116,114,97,99,101,98,97,99,107,32,97,118,97,105,108,97,98,108,101,10], NTI33554449);
    }
    

  return result_33556605;

}

function newSeq_33556919(len_33556921) {
  var result_33556922 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 633;
    F.filename = "system.nim";
    result_33556922 = new Array(len_33556921); for (var i = 0 ; i < len_33556921 ; ++i) { result_33556922[i] = null; }  framePtr = F.prev;

  return result_33556922;

}

function unhandledException(e_33556649) {
    var buf_33556650 = [[]];
    if (!(((e_33556649.message).length == 0))) {
    buf_33556650[0].push.apply(buf_33556650[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110,58,32]);;
    buf_33556650[0].push.apply(buf_33556650[0], e_33556649.message);;
    }
    else {
    buf_33556650[0].push.apply(buf_33556650[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110]);;
    }
    
    buf_33556650[0].push.apply(buf_33556650[0], [32,91]);;
    add_33556373(buf_33556650, 0, e_33556649.name);
    buf_33556650[0].push.apply(buf_33556650[0], [93,10]);;
    buf_33556650[0].push.apply(buf_33556650[0], rawWriteStackTrace_33556604());;
    var cbuf_33556651 = toJSStr(buf_33556650[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556651);
  }
  else {
    throw cbuf_33556651;
  }
  

  
}

function raiseOverflow() {
    raiseException({message: [111,118,101,114,45,32,111,114,32,117,110,100,101,114,102,108,111,119], parent: null, m_type: NTI134217743, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33557048) {
        if (a_33557048 > 2147483647 || a_33557048 < -2147483648) raiseOverflow();
  

  
}

function raiseRangeError() {
    raiseException({message: [118,97,108,117,101,32,111,117,116,32,111,102,32,114,97,110,103,101], parent: null, m_type: NTI134217751, name: null, trace: [], up: null}, "RangeDefect");

  
}

function raiseIndexError(i_33556812, a_33556813, b_33556814) {
    var Temporary1;

    if ((b_33556814 < a_33556813)) {
    Temporary1 = [105,110,100,101,120,32,111,117,116,32,111,102,32,98,111,117,110,100,115,44,32,116,104,101,32,99,111,110,116,97,105,110,101,114,32,105,115,32,101,109,112,116,121];
    }
    else {
    Temporary1 = ([105,110,100,101,120,32] || []).concat(HEX24_369098760(i_33556812) || [],[32,110,111,116,32,105,110,32] || [],HEX24_369098760(a_33556813) || [],[32,46,46,32] || [],HEX24_369098760(b_33556814) || []);
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554449), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");

  
}

function addChars_301990090(result_301990092, result_301990092_Idx, x_301990093, start_301990094, n_301990095) {
    var Temporary1;

  var F = {procname: "addChars.addChars", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 43;
    F.filename = "digitsutils.nim";
    var old_301990096 = (result_301990092[result_301990092_Idx]).length;
    F.line = 44;
    if (result_301990092[result_301990092_Idx].length < (Temporary1 = chckRange(addInt(old_301990096, n_301990095), 0, 2147483647), Temporary1)) { for (var i = result_301990092[result_301990092_Idx].length; i < Temporary1; ++i) result_301990092[result_301990092_Idx].push(0); }
         else {result_301990092[result_301990092_Idx].length = Temporary1; };
    Label2: {
      F.line = 46;
      var iHEX60gensym4_301990110 = 0;
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_536871030 = 0;
      Label3: {
        F.line = 129;
          Label4: while (true) {
          if (!(i_536871030 < n_301990095)) break Label4;
            F.line = 49;
            F.filename = "digitsutils.nim";
            iHEX60gensym4_301990110 = i_536871030;
            F.line = 46;
            result_301990092[result_301990092_Idx][chckIndx(addInt(old_301990096, iHEX60gensym4_301990110), 0, (result_301990092[result_301990092_Idx]).length - 1)] = x_301990093.charCodeAt(chckIndx(addInt(start_301990094, iHEX60gensym4_301990110), 0, (x_301990093).length - 1));
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_536871030 = addInt(i_536871030, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function addChars_301990086(result_301990088, result_301990088_Idx, x_301990089) {
  var F = {procname: "addChars.addChars", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 55;
    F.filename = "digitsutils.nim";
    addChars_301990090(result_301990088, result_301990088_Idx, x_301990089, 0, ((x_301990089) == null ? 0 : (x_301990089).length));
  framePtr = F.prev;

  
}

function addInt_301990111(result_301990112, result_301990112_Idx, x_301990113) {
  var F = {procname: "digitsutils.addInt", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 111;
    F.filename = "digitsutils.nim";
    addChars_301990086(result_301990112, result_301990112_Idx, ((x_301990113) + ""));
  framePtr = F.prev;

  
}

function addInt_301990129(result_301990130, result_301990130_Idx, x_301990131) {
  var F = {procname: "digitsutils.addInt", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 115;
    F.filename = "digitsutils.nim";
    addInt_301990111(result_301990130, result_301990130_Idx, BigInt(x_301990131));
  framePtr = F.prev;

  
}

function HEX24_369098760(x_369098761) {
  var result_369098762 = [[]];

  var F = {procname: "dollars.$", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 18;
    F.filename = "dollars.nim";
    addInt_301990129(result_369098762, 0, x_369098761);
  framePtr = F.prev;

  return result_369098762[0];

}

function formatValue_536870950(result_536870953, result_536870953_Idx, value_536870954) {
  var F = {procname: "formatValue.formatValue", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/pure/strformat.nim", line: 0};
  framePtr = F;
    F.line = 492;
    F.filename = "strformat.nim";
    result_536870953[result_536870953_Idx].push.apply(result_536870953[result_536870953_Idx], HEX24_369098760(value_536870954));;
  framePtr = F.prev;

  
}

function genRandomColor_536870919() {
  var result_536870920 = [];

  var F = {procname: "main.genRandomColor", prev: framePtr, filename: "/home/runner/Quill/tests/main.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 6;
    F.filename = "main.nim";
    var a_536870925 = Math.round((Math.random() * 255.0));
    F.line = 7;
    var b_536870930 = Math.round((Math.random() * 255.0));
    F.line = 8;
    var c_536870935 = Math.round((Math.random() * 255.0));
    F.line = 9;
    Label1: {
      F.line = 9;
      var fmtRes_536870944 = [mnewString(0)];
      F.line = 9;
      fmtRes_536870944[0].push.apply(fmtRes_536870944[0], [114,103,98,40]);;
      F.line = 9;
      formatValue_536870950(fmtRes_536870944, 0, a_536870925);
      F.line = 9;
      fmtRes_536870944[0].push.apply(fmtRes_536870944[0], [44,32]);;
      F.line = 9;
      formatValue_536870950(fmtRes_536870944, 0, b_536870930);
      F.line = 9;
      fmtRes_536870944[0].push.apply(fmtRes_536870944[0], [44,32]);;
      F.line = 9;
      formatValue_536870950(fmtRes_536870944, 0, c_536870935);
      F.line = 9;
      fmtRes_536870944[0].push.apply(fmtRes_536870944[0], [41]);;
    };
    result_536870920 = nimCopy(null, fmtRes_536870944[0], NTI33554449);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_536870920;

}

function validateUtf8_1073742160(s_1073742161) {
  var result_1073742162 = 0;

  var F = {procname: "unicode.validateUtf8", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/pure/unicode.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 184;
    F.filename = "unicode.nim";
    var i_1073742163 = 0;
    F.line = 185;
    var L_1073742167 = (s_1073742161).length;
    Label1: {
      F.line = 186;
        Label2: while (true) {
        if (!(i_1073742163 < L_1073742167)) break Label2;
          if ((s_1073742161[chckIndx(i_1073742163, 0, (s_1073742161).length - 1)] <= 127)) {
          F.line = 188;
          i_1073742163 = addInt(i_1073742163, 1);
          }
          else {
          if (((s_1073742161[chckIndx(i_1073742163, 0, (s_1073742161).length - 1)] >>> 5) == 6)) {
          if ((s_1073742161[chckIndx(i_1073742163, 0, (s_1073742161).length - 1)] < 194)) {
          F.line = 190;
          result_1073742162 = i_1073742163;
          break BeforeRet;
          }
          
          if (((addInt(i_1073742163, 1) < L_1073742167) && ((s_1073742161[chckIndx(addInt(i_1073742163, 1), 0, (s_1073742161).length - 1)] >>> 6) == 2))) {
          F.line = 191;
          i_1073742163 = addInt(i_1073742163, 2);
          }
          else {
            F.line = 192;
            result_1073742162 = i_1073742163;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_1073742161[chckIndx(i_1073742163, 0, (s_1073742161).length - 1)] >>> 4) == 14)) {
          if ((((addInt(i_1073742163, 2) < L_1073742167) && ((s_1073742161[chckIndx(addInt(i_1073742163, 1), 0, (s_1073742161).length - 1)] >>> 6) == 2)) && ((s_1073742161[chckIndx(addInt(i_1073742163, 2), 0, (s_1073742161).length - 1)] >>> 6) == 2))) {
          F.line = 195;
          i_1073742163 = addInt(i_1073742163, 3);
          }
          else {
            F.line = 196;
            result_1073742162 = i_1073742163;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_1073742161[chckIndx(i_1073742163, 0, (s_1073742161).length - 1)] >>> 3) == 30)) {
          if (((((addInt(i_1073742163, 3) < L_1073742167) && ((s_1073742161[chckIndx(addInt(i_1073742163, 1), 0, (s_1073742161).length - 1)] >>> 6) == 2)) && ((s_1073742161[chckIndx(addInt(i_1073742163, 2), 0, (s_1073742161).length - 1)] >>> 6) == 2)) && ((s_1073742161[chckIndx(addInt(i_1073742163, 3), 0, (s_1073742161).length - 1)] >>> 6) == 2))) {
          F.line = 201;
          i_1073742163 = addInt(i_1073742163, 4);
          }
          else {
            F.line = 202;
            result_1073742162 = i_1073742163;
            break BeforeRet;
          }
          
          }
          else {
            F.line = 204;
            result_1073742162 = i_1073742163;
            break BeforeRet;
          }
          }}}
        }
    };
    F.line = 205;
    result_1073742162 = (-1);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1073742162;

}

function validateUtf8_1073749168(s_1073749169) {
  var result_1073749170 = 0;

  var F = {procname: "unicode.validateUtf8", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/pure/unicode.nim", line: 0};
  framePtr = F;
    F.line = 1191;
    F.filename = "unicode.nim";
    result_1073749170 = validateUtf8_1073742160((s_1073749169.slice(0, (s_1073749169).length - 1 + 1)));
  framePtr = F.prev;

  return result_1073749170;

}

function nucruneLen(s_1073741852) {
  var result_1073741853 = 0;

  var F = {procname: "unicode.runeLen", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/pure/unicode.nim", line: 0};
  framePtr = F;
    F.line = 52;
    F.filename = "unicode.nim";
    result_1073741853 = 0;
    F.line = 53;
    var i_1073741854 = 0;
    Label1: {
      F.line = 54;
        Label2: while (true) {
        if (!(i_1073741854 < (s_1073741852).length)) break Label2;
          if ((s_1073741852[chckIndx(i_1073741854, 0, (s_1073741852).length - 1)] <= 127)) {
          F.line = 55;
          i_1073741854 = addInt(i_1073741854, 1);
          }
          else {
          if (((s_1073741852[chckIndx(i_1073741854, 0, (s_1073741852).length - 1)] >>> 5) == 6)) {
          F.line = 56;
          i_1073741854 = addInt(i_1073741854, 2);
          }
          else {
          if (((s_1073741852[chckIndx(i_1073741854, 0, (s_1073741852).length - 1)] >>> 4) == 14)) {
          F.line = 57;
          i_1073741854 = addInt(i_1073741854, 3);
          }
          else {
          if (((s_1073741852[chckIndx(i_1073741854, 0, (s_1073741852).length - 1)] >>> 3) == 30)) {
          F.line = 58;
          i_1073741854 = addInt(i_1073741854, 4);
          }
          else {
          if (((s_1073741852[chckIndx(i_1073741854, 0, (s_1073741852).length - 1)] >>> 2) == 62)) {
          F.line = 59;
          i_1073741854 = addInt(i_1073741854, 5);
          }
          else {
          if (((s_1073741852[chckIndx(i_1073741854, 0, (s_1073741852).length - 1)] >>> 1) == 126)) {
          F.line = 60;
          i_1073741854 = addInt(i_1073741854, 6);
          }
          else {
            F.line = 61;
          i_1073741854 = addInt(i_1073741854, 1);
          }
          }}}}}
          F.line = 62;
          result_1073741853 = addInt(result_1073741853, 1);
        }
    };
  framePtr = F.prev;

  return result_1073741853;

}

function runeLen_1073748996(s_1073748997) {
  var result_1073748998 = 0;

  var F = {procname: "unicode.runeLen", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/pure/unicode.nim", line: 0};
  framePtr = F;
    F.line = 1158;
    F.filename = "unicode.nim";
    result_1073748998 = nucruneLen((s_1073748997.slice(0, (s_1073748997).length - 1 + 1)));
  framePtr = F.prev;

  return result_1073748998;

}

function nsuRepeatChar(c_738198625, count_738198626) {
  var result_738198627 = [];

  var F = {procname: "strutils.repeat", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 1328;
    F.filename = "strutils.nim";
    result_738198627 = nimCopy(null, mnewString(count_738198626), NTI33554449);
    Label1: {
      F.line = 1329;
      var i_738198632 = 0;
      F.line = 81;
      F.filename = "iterators_1.nim";
      var colontmp__536871044 = 0;
      F.line = 1329;
      F.filename = "strutils.nim";
      colontmp__536871044 = subInt(count_738198626, 1);
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_536871045 = 0;
      Label2: {
        F.line = 97;
          Label3: while (true) {
          if (!(res_536871045 <= colontmp__536871044)) break Label3;
            F.line = 1329;
            F.filename = "strutils.nim";
            i_738198632 = res_536871045;
            F.line = 1329;
            result_738198627[chckIndx(i_738198632, 0, (result_738198627).length - 1)] = c_738198625;
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_536871045 = addInt(res_536871045, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_738198627;

}

function raiseDivByZero() {
    raiseException({message: [100,105,118,105,115,105,111,110,32,98,121,32,122,101,114,111], parent: null, m_type: NTI134217742, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}

function alignString_704643092(s_704643093, minimumWidth_704643094, align_704643095, fill_704643096) {
      var Temporary1;

  var result_704643097 = [];

  var F = {procname: "strformat.alignString", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/pure/strformat.nim", line: 0};
  framePtr = F;
    if ((minimumWidth_704643094 == 0)) {
    F.line = 335;
    F.filename = "strformat.nim";
    result_704643097 = nimCopy(null, s_704643093, NTI33554449);
    }
    else {
      F.line = 337;
      if ((validateUtf8_1073749168(s_704643093) == (-1))) {
      Temporary1 = runeLen_1073748996(s_704643093);
      }
      else {
      Temporary1 = (s_704643093).length;
      }
      
      var sRuneLen_704643098 = Temporary1;
      F.line = 338;
      var toFill_704643099 = subInt(minimumWidth_704643094, sRuneLen_704643098);
      if ((toFill_704643099 <= 0)) {
      F.line = 340;
      result_704643097 = nimCopy(null, s_704643093, NTI33554449);
      }
      else {
      if (((align_704643095 == 60) || (align_704643095 == 0))) {
      F.line = 342;
      result_704643097 = nimCopy(null, (s_704643093 || []).concat(nsuRepeatChar(fill_704643096, chckRange(toFill_704643099, 0, 2147483647)) || []), NTI33554449);
      }
      else {
      if ((align_704643095 == 94)) {
      F.line = 344;
      var half_704643100 = divInt(toFill_704643099, 2);
      F.line = 345;
      result_704643097 = nimCopy(null, (nsuRepeatChar(fill_704643096, chckRange(half_704643100, 0, 2147483647)) || []).concat(s_704643093 || [],nsuRepeatChar(fill_704643096, chckRange(subInt(toFill_704643099, half_704643100), 0, 2147483647)) || []), NTI33554449);
      }
      else {
        F.line = 347;
        result_704643097 = nimCopy(null, (nsuRepeatChar(fill_704643096, chckRange(toFill_704643099, 0, 2147483647)) || []).concat(s_704643093 || []), NTI33554449);
      }
      }}
    }
    
  framePtr = F.prev;

  return result_704643097;

}

function formatValue_536870980(result_536870982, result_536870982_Idx, value_536870983) {
  var F = {procname: "formatValue.formatValue", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/pure/strformat.nim", line: 0};
  framePtr = F;
    F.line = 593;
    F.filename = "strformat.nim";
    var value_536870992 = nimCopy(null, value_536870983, NTI33554449);
    F.line = 604;
    result_536870982[result_536870982_Idx].push.apply(result_536870982[result_536870982_Idx], alignString_704643092(value_536870992, 0, 0, 32));;
  framePtr = F.prev;

  
}

function HEX5BHEX5DHEX3D_1040187459(parent_1040187460, i_1040187461, child_1040187462) {
  var F = {procname: "utils.[]=", prev: framePtr, filename: "/home/runner/Quill/src/quill/utils.nim", line: 0};
  framePtr = F;
    F.line = 49;
    F.filename = "utils.nim";
    parent_1040187460.replaceChild(child_1040187462, parent_1040187460.childNodes[i_1040187461]);
  framePtr = F.prev;

  
}

function visualElement_671088751(q_671088752) {
  var result_671088753 = null;

  var F = {procname: "quill.visualElement", prev: framePtr, filename: "/home/runner/Quill/src/quill.nim", line: 0};
  framePtr = F;
    F.line = 152;
    F.filename = "quill.nim";
    result_671088753 = q_671088752.internalElm.childNodes[0];
  framePtr = F.prev;

  return result_671088753;

}

function draw_671089116(q_671089117, q_671089117_Idx, n_671089118) {
  var F = {procname: "quill.draw", prev: framePtr, filename: "/home/runner/Quill/src/quill.nim", line: 0};
  framePtr = F;
    F.line = 240;
    F.filename = "quill.nim";
    HEX5BHEX5DHEX3D_1040187459(visualElement_671088751(q_671089117[q_671089117_Idx]), q_671089117[q_671089117_Idx].current, n_671089118);
  framePtr = F.prev;

  
}

function text_671088754(q_671088755) {
  var result_671088756 = null;

  var F = {procname: "quill.text", prev: framePtr, filename: "/home/runner/Quill/src/quill.nim", line: 0};
  framePtr = F;
    F.line = 155;
    F.filename = "quill.nim";
    result_671088756 = eventElement_671088748(q_671088755).value;
  framePtr = F.prev;

  return result_671088756;

}

function insert_33558008(x_33558009, x_33558009_Idx, item_33558010, i_33558011) {
    var Temporary1;

  var F = {procname: "system.insert", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (((item_33558010).length == 0)) {
    F.line = 2432;
    F.filename = "system.nim";
    break BeforeRet;
    }
    
    F.line = 2433;
    var xl_33558012 = (x_33558009[x_33558009_Idx]).length;
    F.line = 2434;
    if (x_33558009[x_33558009_Idx].length < (Temporary1 = chckRange(addInt(xl_33558012, (item_33558010).length), 0, 2147483647), Temporary1)) { for (var i = x_33558009[x_33558009_Idx].length; i < Temporary1; ++i) x_33558009[x_33558009_Idx].push(0); }
         else {x_33558009[x_33558009_Idx].length = Temporary1; };
    F.line = 2435;
    var j_33558013 = subInt(xl_33558012, 1);
    Label2: {
      F.line = 2436;
        Label3: while (true) {
        if (!(i_33558011 <= j_33558013)) break Label3;
          F.line = 2440;
          x_33558009[x_33558009_Idx][chckIndx(addInt(j_33558013, (item_33558010).length), 0, (x_33558009[x_33558009_Idx]).length - 1)] = x_33558009[x_33558009_Idx][chckIndx(j_33558013, 0, (x_33558009[x_33558009_Idx]).length - 1)];
          F.line = 2441;
          j_33558013 = subInt(j_33558013, 1);
        }
    };
    F.line = 2442;
    j_33558013 = 0;
    Label4: {
      F.line = 2443;
        Label5: while (true) {
        if (!(j_33558013 < (item_33558010).length)) break Label5;
          F.line = 2444;
          x_33558009[x_33558009_Idx][chckIndx(addInt(j_33558013, i_33558011), 0, (x_33558009[x_33558009_Idx]).length - 1)] = item_33558010[chckIndx(j_33558013, 0, (item_33558010).length - 1)];
          F.line = 2445;
          j_33558013 = addInt(j_33558013, 1);
        }
    };
  };
  framePtr = F.prev;

  
}

function insert_671089150(q_671089151, q_671089151_Idx, text_671089152) {
  var F = {procname: "quill.insert", prev: framePtr, filename: "/home/runner/Quill/src/quill.nim", line: 0};
  framePtr = F;
    F.line = 252;
    F.filename = "quill.nim";
    var txt_671089153 = [cstrToNimstr(text_671088754(q_671089151[q_671089151_Idx]))];
    F.line = 253;
    insert_33558008(txt_671089153, 0, cstrToNimstr(text_671089152), chckRange(eventElement_671088748(q_671089151[q_671089151_Idx]).selectionStart, 0, 2147483647));
    F.line = 254;
    textHEX3D_671088757(q_671089151, q_671089151_Idx, toJSStr(txt_671089153[0]));
  framePtr = F.prev;

  
}

function HEX5BHEX5D_671089122(s_671089124, i_671089125) {
  var result_671089126 = null;
  var result_671089126_Idx = 0;

  var F = {procname: "[].[]", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/system/indices.nim", line: 0};
  framePtr = F;
    F.line = 30;
    F.filename = "indices.nim";
    result_671089126 = s_671089124; result_671089126_Idx = chckIndx(subInt((s_671089124).length, i_671089125), 0, (s_671089124).length - 1);
  framePtr = F.prev;

  return [result_671089126, result_671089126_Idx];

}

function newSeq_671088977(len_671088979) {
  var result_671088980 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 633;
    F.filename = "system.nim";
    result_671088980 = new Array(len_671088979); for (var i = 0 ; i < len_671088979 ; ++i) { result_671088980[i] = 0; }  framePtr = F.prev;

  return result_671088980;

}

function delete_671089023(x_671089025, x_671089025_Idx, i_671089026) {
  var F = {procname: "delete.delete", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 1972;
    F.filename = "system.nim";
    x_671089025[x_671089025_Idx].splice(i_671089026, 1);
  framePtr = F.prev;

  
}

function sysFatal_268435501(message_268435504) {
  var F = {procname: "sysFatal.sysFatal", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/system/fatal.nim", line: 0};
  framePtr = F;
    F.line = 53;
    F.filename = "fatal.nim";
    raiseException({message: nimCopy(null, message_268435504, NTI33554449), m_type: NTI134217745, parent: null, name: null, trace: [], up: null}, "AssertionDefect");
  framePtr = F.prev;

  
}

function raiseAssert_268435499(msg_268435500) {
  var F = {procname: "assertions.raiseAssert", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/std/assertions.nim", line: 0};
  framePtr = F;
    F.line = 36;
    F.filename = "assertions.nim";
    sysFatal_268435501(msg_268435500);
  framePtr = F.prev;

  
}

function failedAssertImpl_268435541(msg_268435542) {
  var F = {procname: "assertions.failedAssertImpl", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/std/assertions.nim", line: 0};
  framePtr = F;
    F.line = 41;
    F.filename = "assertions.nim";
    raiseAssert_268435499(msg_268435542);
  framePtr = F.prev;

  
}

function HEX5BHEX5D_671088859(s_671088862, x_671088863) {
  var result_671088864 = [];

  var F = {procname: "[].[]", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/system/indices.nim", line: 0};
  framePtr = F;
    F.line = 83;
    F.filename = "indices.nim";
    var a_671088866 = x_671088863.a;
    F.line = 84;
    var L_671088868 = addInt(subInt(x_671088863.b, a_671088866), 1);
    F.line = 85;
    result_671088864 = nimCopy(null, mnewString(chckRange(L_671088868, 0, 2147483647)), NTI33554449);
    Label1: {
      F.line = 86;
      var i_671088873 = 0;
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_536871071 = 0;
      Label2: {
        F.line = 129;
          Label3: while (true) {
          if (!(i_536871071 < L_671088868)) break Label3;
            F.line = 86;
            F.filename = "indices.nim";
            i_671088873 = i_536871071;
            F.line = 86;
            result_671088864[chckIndx(i_671088873, 0, (result_671088864).length - 1)] = s_671088862[chckIndx(addInt(i_671088873, a_671088866), 0, (s_671088862).length - 1)];
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_536871071 = addInt(i_536871071, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_671088864;

}

function HEX5BHEX5D_671088843(s_671088846, i_671088847) {
  var result_671088848 = null;

  var F = {procname: "[].[]", prev: framePtr, filename: "/home/runner/Quill/src/quill/utils.nim", line: 0};
  framePtr = F;
    F.line = 3;
    F.filename = "utils.nim";
    result_671088848 = toJSStr(HEX5BHEX5D_671088859(cstrToNimstr(s_671088846), i_671088847));
  framePtr = F.prev;

  return result_671088848;

}

function HEX2EHEX2E_671088816(a_671088819, b_671088820) {
  var result_671088821 = ({a: 0, b: 0});

  var F = {procname: ".....", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 418;
    F.filename = "system.nim";
    result_671088821 = nimCopy(result_671088821, {a: a_671088819, b: b_671088820}, NTI905969733);
  framePtr = F.prev;

  return result_671088821;

}

function addEscapedChar_33558024(s_33558025, s_33558025_Idx, c_33558026) {
  var F = {procname: "system.addEscapedChar", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2472;
    F.filename = "system.nim";
    switch (c_33558026) {
    case 7:
      F.line = 2473;
      s_33558025[s_33558025_Idx].push.apply(s_33558025[s_33558025_Idx], [92,97]);;
      break;
    case 8:
      F.line = 2474;
      s_33558025[s_33558025_Idx].push.apply(s_33558025[s_33558025_Idx], [92,98]);;
      break;
    case 9:
      F.line = 2475;
      s_33558025[s_33558025_Idx].push.apply(s_33558025[s_33558025_Idx], [92,116]);;
      break;
    case 10:
      F.line = 2476;
      s_33558025[s_33558025_Idx].push.apply(s_33558025[s_33558025_Idx], [92,110]);;
      break;
    case 11:
      F.line = 2477;
      s_33558025[s_33558025_Idx].push.apply(s_33558025[s_33558025_Idx], [92,118]);;
      break;
    case 12:
      F.line = 2478;
      s_33558025[s_33558025_Idx].push.apply(s_33558025[s_33558025_Idx], [92,102]);;
      break;
    case 13:
      F.line = 2479;
      s_33558025[s_33558025_Idx].push.apply(s_33558025[s_33558025_Idx], [92,114]);;
      break;
    case 27:
      F.line = 2480;
      s_33558025[s_33558025_Idx].push.apply(s_33558025[s_33558025_Idx], [92,101]);;
      break;
    case 92:
      F.line = 2481;
      s_33558025[s_33558025_Idx].push.apply(s_33558025[s_33558025_Idx], [92,92]);;
      break;
    case 39:
      F.line = 2482;
      s_33558025[s_33558025_Idx].push.apply(s_33558025[s_33558025_Idx], [92,39]);;
      break;
    case 34:
      F.line = 2483;
      s_33558025[s_33558025_Idx].push.apply(s_33558025[s_33558025_Idx], [92,34]);;
      break;
    case 32:
    case 33:
    case 35:
    case 36:
    case 37:
    case 38:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 91:
    case 93:
    case 94:
    case 95:
    case 96:
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 122:
    case 123:
    case 124:
    case 125:
    case 126:
      F.line = 2484;
      addChar(s_33558025[s_33558025_Idx], c_33558026);;
      break;
    default: 
      F.line = 2486;
      s_33558025[s_33558025_Idx].push.apply(s_33558025[s_33558025_Idx], [92,120]);;
      F.line = 2488;
      var n_33558036 = c_33558026;
      F.line = 2489;
      addChar(s_33558025[s_33558025_Idx], [48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70][chckIndx(((n_33558036 & 240) >> 4), 0, ([48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70]).length - 1)]);;
      F.line = 2490;
      addChar(s_33558025[s_33558025_Idx], [48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70][chckIndx((n_33558036 & 15), 0, ([48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70]).length - 1)]);;
      break;
    }
  framePtr = F.prev;

  
}

function addQuoted_671088932(s_671088934, s_671088934_Idx, x_671088935) {
  var F = {procname: "addQuoted.addQuoted", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2518;
    F.filename = "system.nim";
    s_671088934[s_671088934_Idx].push.apply(s_671088934[s_671088934_Idx], [34]);;
    Label1: {
      F.line = 2519;
      var c_671088936 = 0;
      F.line = 83;
      F.filename = "iterators.nim";
      var iHEX60gensym13_536871080 = 0;
      F.line = 84;
      var nHEX60gensym13_536871081 = ((x_671088935) == null ? 0 : (x_671088935).length);
      Label2: {
        F.line = 88;
          Label3: while (true) {
          if (!(iHEX60gensym13_536871080 < nHEX60gensym13_536871081)) break Label3;
            F.line = 2519;
            F.filename = "system.nim";
            c_671088936 = x_671088935.charCodeAt(chckIndx(iHEX60gensym13_536871080, 0, (x_671088935).length - 1));
            if ((c_671088936 <= 127)) {
            F.line = 2523;
            addEscapedChar_33558024(s_671088934, s_671088934_Idx, c_671088936);
            }
            else {
              F.line = 2525;
            addChar(s_671088934[s_671088934_Idx], c_671088936);;
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            iHEX60gensym13_536871080 += 1;
          }
      };
    };
    F.line = 2526;
    F.filename = "system.nim";
    s_671088934[s_671088934_Idx].push.apply(s_671088934[s_671088934_Idx], [34]);;
  framePtr = F.prev;

  
}

function collectionToString_671088898(x_671088900, prefix_671088901, separator_671088902, suffix_671088903) {
  var result_671088904 = [[]];

  var F = {procname: "collectionToString.collectionToString", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 90;
    F.filename = "dollars.nim";
    result_671088904[0] = nimCopy(null, prefix_671088901, NTI33554449);
    F.line = 91;
    var firstElement_671088905 = true;
    Label1: {
      F.line = 92;
      var value_671088928 = null;
      F.line = 249;
      F.filename = "iterators.nim";
      var i_536871075 = 0;
      F.line = 250;
      var L_536871076 = (x_671088900).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_536871075 < L_536871076)) break Label3;
            F.line = 92;
            F.filename = "dollars.nim";
            value_671088928 = x_671088900[i_536871075];
            if (firstElement_671088905) {
            F.line = 94;
            firstElement_671088905 = false;
            }
            else {
              F.line = 96;
            result_671088904[0].push.apply(result_671088904[0], separator_671088902);;
            }
            
            if ((value_671088928 == null)) {
            F.line = 101;
            result_671088904[0].push.apply(result_671088904[0], [110,105,108]);;
            }
            else {
              F.line = 103;
            addQuoted_671088932(result_671088904, 0, value_671088928);
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            i_536871075 += 1;
            if (!(((x_671088900).length == L_536871076))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/home/runner/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    F.line = 106;
    F.filename = "dollars.nim";
    result_671088904[0].push.apply(result_671088904[0], suffix_671088903);;
  framePtr = F.prev;

  return result_671088904[0];

}

function HEX24_671088894(x_671088896) {
  var result_671088897 = [];

  var F = {procname: "$.$", prev: framePtr, filename: "/home/runner/.choosenim/toolchains/nim-2.0.8/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 117;
    F.filename = "dollars.nim";
    result_671088897 = nimCopy(null, collectionToString_671088898(x_671088896, [64,91], [44,32], [93]), NTI33554449);
  framePtr = F.prev;

  return result_671088897;

}

function dumpSectors_671088760(q_671088761) {
  var result_671088762 = [];

  var F = {procname: "quill.dumpSectors", prev: framePtr, filename: "/home/runner/Quill/src/quill.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 165;
    F.filename = "quill.nim";
    var sectors_671088763 = nimCopy(null, q_671088761.sectors, NTI671088653);
    F.line = 166;
    var v_671088764 = text_671088754(q_671088761);
    F.line = 167;
    var res_671088772 = newSeq_33556919(0);
    Label1: {
      F.line = 168;
      var i_671088814 = 0;
      F.line = 168;
      var sect_671088815 = 0;
      F.line = 182;
      F.filename = "iterators.nim";
      var i_536871067 = 0;
      F.line = 183;
      var L_536871068 = (sectors_671088763).length;
      Label2: {
        F.line = 184;
          Label3: while (true) {
          if (!(i_536871067 < L_536871068)) break Label3;
            F.line = 168;
            F.filename = "quill.nim";
            i_671088814 = i_536871067;
            F.line = 168;
            sect_671088815 = sectors_671088763[chckIndx(i_536871067, 0, (sectors_671088763).length - 1)];
            if ((i_671088814 == 0)) {
            F.line = 170;
            res_671088772.push(HEX5BHEX5D_671088843(v_671088764, HEX2EHEX2E_671088816(0, subInt(sect_671088815, 1))));;
            }
            else {
              F.line = 172;
            res_671088772.push(HEX5BHEX5D_671088843(v_671088764, HEX2EHEX2E_671088816(sectors_671088763[chckIndx(subInt(i_671088814, 1), 0, (sectors_671088763).length - 1)], subInt(sect_671088815, 1))));;
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            i_536871067 += 1;
            if (!(((sectors_671088763).length == L_536871068))) {
            F.line = 187;
            failedAssertImpl_268435541(makeNimstrLit("/home/runner/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(187, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    F.line = 173;
    F.filename = "quill.nim";
    result_671088762 = nimCopy(null, HEX24_671088894(res_671088772), NTI33554449);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_671088762;

}

function quillInputHandle_671088953(q_671088954, q_671088954_Idx) {
  var F = {procname: "quill.quillInputHandle", prev: framePtr, filename: "/home/runner/Quill/src/quill.nim", line: 0};
  framePtr = F;
    F.line = 176;
    F.filename = "quill.nim";
    var v_671088955 = text_671088754(q_671088954[q_671088954_Idx]);
    F.line = 177;
    eventElement_671088748(q_671088954[q_671088954_Idx]).setAttribute("style", toJSStr(([109,105,110,45,104,101,105,103,104,116,58,32] || []).concat(HEX24_369098760(addInt(visualElement_671088751(q_671088954[q_671088954_Idx]).scrollHeight, 20)) || [],[112,120,59,32,109,105,110,45,119,105,100,116,104,58,32] || [],HEX24_369098760(addInt(visualElement_671088751(q_671088954[q_671088954_Idx]).scrollWidth, 20)) || [],[112,120,59] || [])));
    F.line = 182;
    var pos_671088956 = eventElement_671088748(q_671088954[q_671088954_Idx]).selectionStart;
    F.line = 183;
    var currentSector_671088957 = (-1);
    if ((0 < (q_671088954[q_671088954_Idx].sectors).length)) {
    Label1: {
      F.line = 185;
        Label2: while (true) {
        if (!(q_671088954[q_671088954_Idx].sectors[chckIndx(addInt(currentSector_671088957, 1), 0, (q_671088954[q_671088954_Idx].sectors).length - 1)] <= pos_671088956)) break Label2;
          F.line = 186;
          currentSector_671088957 = addInt(currentSector_671088957, 1);
          if ((currentSector_671088957 == (q_671088954[q_671088954_Idx].sectors).length - 1)) {
          F.line = 188;
          break Label1;
          }
          
        }
    };
    }
    
    F.line = 189;
    var adjust_671088971 = subInt(((v_671088955) == null ? 0 : (v_671088955).length), q_671088954[q_671088954_Idx].plen);
    F.line = 190;
    var currentPos_671088972 = q_671088954[q_671088954_Idx].sectors[chckIndx(currentSector_671088957, 0, (q_671088954[q_671088954_Idx].sectors).length - 1)];
    F.line = 191;
    var cacheDelete_671088985 = newSeq_671088977(0);
    if ((currentSector_671088957 < (q_671088954[q_671088954_Idx].sectors).length - 1)) {
    Label3: {
      F.line = 193;
      var i_671088997 = 0;
      F.line = 46;
      F.filename = "iterators_1.nim";
      var colontmp__536871051 = 0;
      F.line = 46;
      var colontmp__536871052 = 0;
      F.line = 193;
      F.filename = "quill.nim";
      colontmp__536871051 = addInt(currentSector_671088957, 1);
      F.line = 193;
      colontmp__536871052 = (q_671088954[q_671088954_Idx].sectors).length - 1;
      F.line = 68;
      F.filename = "iterators_1.nim";
      var res_536871054 = colontmp__536871051;
      Label4: {
        F.line = 69;
          Label5: while (true) {
          if (!(res_536871054 <= colontmp__536871052)) break Label5;
            F.line = 193;
            F.filename = "quill.nim";
            i_671088997 = res_536871054;
            F.line = 194;
            q_671088954[q_671088954_Idx].sectors[chckIndx(i_671088997, 0, (q_671088954[q_671088954_Idx].sectors).length - 1)] = addInt(q_671088954[q_671088954_Idx].sectors[chckIndx(i_671088997, 0, (q_671088954[q_671088954_Idx].sectors).length - 1)], adjust_671088971);
            if (((q_671088954[q_671088954_Idx].sectors[chckIndx(i_671088997, 0, (q_671088954[q_671088954_Idx].sectors).length - 1)] <= currentPos_671088972) || (((v_671088955) == null ? 0 : (v_671088955).length) <= q_671088954[q_671088954_Idx].sectors[chckIndx(i_671088997, 0, (q_671088954[q_671088954_Idx].sectors).length - 1)]))) {
            if ((1 < (q_671088954[q_671088954_Idx].sectors).length)) {
            F.line = 197;
            var child_671089008 = visualElement_671088751(q_671088954[q_671088954_Idx]).childNodes[i_671088997];
            if (!((child_671089008 === undefined))) {
            F.line = 199;
            visualElement_671088751(q_671088954[q_671088954_Idx]).removeChild(child_671089008);
            }
            
            F.line = 200;
            cacheDelete_671088985.push(i_671088997);;
            }
            
            }
            
            F.line = 74;
            F.filename = "iterators_1.nim";
            res_536871054 = addInt(res_536871054, 1);
          }
      };
    };
    }
    
    Label6: {
      F.line = 201;
      F.filename = "quill.nim";
      var i_671089021 = 0;
      F.line = 201;
      var pos_671089022 = 0;
      F.line = 182;
      F.filename = "iterators.nim";
      var i_536871058 = 0;
      F.line = 183;
      var L_536871059 = (cacheDelete_671088985).length;
      Label7: {
        F.line = 184;
          Label8: while (true) {
          if (!(i_536871058 < L_536871059)) break Label8;
            F.line = 201;
            F.filename = "quill.nim";
            i_671089021 = i_536871058;
            F.line = 201;
            pos_671089022 = cacheDelete_671088985[chckIndx(i_536871058, 0, (cacheDelete_671088985).length - 1)];
            F.line = 202;
            delete_671089023(q_671088954[q_671088954_Idx], "sectors", chckRange(subInt(pos_671089022, i_671089021), 0, 2147483647));
            F.line = 13;
            F.filename = "iterators.nim";
            i_536871058 += 1;
            if (!(((cacheDelete_671088985).length == L_536871059))) {
            F.line = 187;
            failedAssertImpl_268435541(makeNimstrLit("/home/runner/.choosenim/toolchains/nim-2.0.8/lib/system/iterators.nim(187, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    F.line = 210;
    F.filename = "quill.nim";
    q_671088954[q_671088954_Idx].current = currentSector_671088957;
    F.line = 211;
    q_671088954[q_671088954_Idx].plen = ((v_671088955) == null ? 0 : (v_671088955).length);
    F.line = 212;
    var e_671089045 = 0;
    if ((currentSector_671088957 < (q_671088954[q_671088954_Idx].sectors).length - 1)) {
    F.line = 214;
    e_671089045 = subInt(q_671088954[q_671088954_Idx].sectors[chckIndx(addInt(currentSector_671088957, 1), 0, (q_671088954[q_671088954_Idx].sectors).length - 1)], 1);
    F.line = 216;
    rawEcho([85,115,105,110,103,32,115,101,99,116,111,114]);
    }
    else {
      F.line = 218;
      e_671089045 = ((v_671088955) == null ? -1 : (v_671088955).length - 1);
      F.line = 220;
      rawEcho([85,115,105,110,103,32,101,110,100]);
    }
    
    F.line = 222;
    rawEcho([67,117,114,114,101,110,116,32,115,101,99,116,111,114,58,32], HEX24_369098760(currentSector_671088957));
    F.line = 223;
    rawEcho(dumpSectors_671088760(q_671088954[q_671088954_Idx]));
    F.line = 224;
    q_671088954[q_671088954_Idx].onDraw(q_671088954, q_671088954_Idx, HEX5BHEX5D_671088843(v_671088955, HEX2EHEX2E_671088816(currentPos_671088972, e_671089045)), (adjust_671088971 < 0));
  framePtr = F.prev;

  
}

function enter_671089119(q_671089120, q_671089120_Idx, pos_671089121) {
    var Temporary1;

  var F = {procname: "quill.enter", prev: framePtr, filename: "/home/runner/Quill/src/quill.nim", line: 0};
  framePtr = F;
    F.line = 246;
    F.filename = "quill.nim";
    q_671089120[q_671089120_Idx].sectors.push(addInt((Temporary1 = HEX5BHEX5D_671089122(q_671089120[q_671089120_Idx].sectors, 1), Temporary1)[0][Temporary1[1]], pos_671089121));;
    F.line = 247;
    visualElement_671088751(q_671089120[q_671089120_Idx]).appendChild(document.createElement("span"));
    F.line = 248;
    quillInputHandle_671088953(q_671089120, q_671089120_Idx);
  framePtr = F.prev;

  
}

function element_671088745(q_671088746) {
  var result_671088747 = null;

  var F = {procname: "quill.element", prev: framePtr, filename: "/home/runner/Quill/src/quill.nim", line: 0};
  framePtr = F;
    F.line = 146;
    F.filename = "quill.nim";
    result_671088747 = q_671088746.internalElm;
  framePtr = F.prev;

  return result_671088747;

}

function initGutter_1174405126(q_1174405127, q_1174405127_Idx) {

function handleGutter_1174405132() {
  var F = {procname: "initGutter.handleGutter", prev: framePtr, filename: "/home/runner/Quill/src/quill/ext/gutters.nim", line: 0};
  framePtr = F;
    F.line = 16;
    F.filename = "gutters.nim";
    gutter_1174405129.setAttribute("style", (("min-height: " + toJSStr(HEX24_369098760(addInt(visualElement_671088751(q_1174405127[q_1174405127_Idx]).scrollHeight, 20)))) + "px;"));
    F.line = 17;
    linecount_1174405131 = 1;
    Label1: {
      F.line = 18;
      var c_1174405133 = 0;
      F.line = 70;
      F.filename = "iterators.nim";
      var colontmp__536871084 = null;
      F.line = 18;
      F.filename = "gutters.nim";
      colontmp__536871084 = eventElement_671088748(q_1174405127[q_1174405127_Idx]).value;
      F.line = 83;
      F.filename = "iterators.nim";
      var iHEX60gensym13_536871085 = 0;
      F.line = 84;
      var nHEX60gensym13_536871086 = ((colontmp__536871084) == null ? 0 : (colontmp__536871084).length);
      Label2: {
        F.line = 88;
          Label3: while (true) {
          if (!(iHEX60gensym13_536871085 < nHEX60gensym13_536871086)) break Label3;
            F.line = 18;
            F.filename = "gutters.nim";
            c_1174405133 = colontmp__536871084.charCodeAt(chckIndx(iHEX60gensym13_536871085, 0, (colontmp__536871084).length - 1));
            if ((c_1174405133 == 10)) {
            F.line = 20;
            linecount_1174405131 = addInt(linecount_1174405131, 1);
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            iHEX60gensym13_536871085 += 1;
          }
      };
    };
    if ((linecount_1174405131 < plinecount_1174405130)) {
    Label4: {
      F.line = 22;
      F.filename = "gutters.nim";
      var __1174405142 = 0;
      F.line = 81;
      F.filename = "iterators_1.nim";
      var colontmp__536871089 = 0;
      F.line = 22;
      F.filename = "gutters.nim";
      colontmp__536871089 = subInt(plinecount_1174405130, linecount_1174405131);
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_536871090 = 1;
      Label5: {
        F.line = 97;
          Label6: while (true) {
          if (!(res_536871090 <= colontmp__536871089)) break Label6;
            F.line = 22;
            F.filename = "gutters.nim";
            __1174405142 = res_536871090;
            F.line = 23;
            var lc_1174405143 = gutter_1174405129.lastChild;
            F.line = 24;
            gutter_1174405129.removeChild(lc_1174405143);
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_536871090 = addInt(res_536871090, 1);
          }
      };
    };
    }
    else {
    if ((plinecount_1174405130 < linecount_1174405131)) {
    F.line = 26;
    F.filename = "gutters.nim";
    var c_1174405144 = document.createElement("div");
    F.line = 27;
    c_1174405144.appendChild(document.createTextNode(toJSStr(HEX24_369098760(linecount_1174405131))));
    F.line = 28;
    gutter_1174405129.appendChild(c_1174405144);
    }
    }
    F.line = 29;
    plinecount_1174405130 = linecount_1174405131;
  framePtr = F.prev;

  
}
    
function HEX3Aanonymous_1174405145(e_1174405146) {
      var F = {procname: "initGutter.:anonymous", prev: framePtr, filename: "/home/runner/Quill/src/quill/ext/gutters.nim", line: 0};
      framePtr = F;
        F.line = 31;
        F.filename = "gutters.nim";
        handleGutter_1174405132();
      framePtr = F.prev;

      
    }

  var F = {procname: "gutters.initGutter", prev: framePtr, filename: "/home/runner/Quill/src/quill/ext/gutters.nim", line: 0};
  framePtr = F;
    F.line = 9;
    F.filename = "gutters.nim";
    var tg_1174405128 = element_671088745(q_1174405127[q_1174405127_Idx]).parentNode;
    F.line = 10;
    var gutter_1174405129 = document.createElement("div");
    F.line = 11;
    gutter_1174405129.className = "quill-gutter";
    F.line = 12;
    tg_1174405128.insertBefore(gutter_1174405129, element_671088745(q_1174405127[q_1174405127_Idx]));
    F.line = 13;
    var plinecount_1174405130 = 0;
    F.line = 14;
    var linecount_1174405131 = 1;
    F.line = 30;
    eventElement_671088748(q_1174405127[q_1174405127_Idx]).addEventListener("input", HEX3Aanonymous_1174405145, false);
    F.line = 33;
    handleGutter_1174405132();
  framePtr = F.prev;

  
}

function init_671089094(q_671089095, q_671089095_Idx) {
    
function HEX3Aanonymous_671089096(ev_671089097) {
      var F = {procname: "init.:anonymous", prev: framePtr, filename: "/home/runner/Quill/src/quill.nim", line: 0};
      framePtr = F;
        F.line = 229;
        F.filename = "quill.nim";
        quillInputHandle_671088953(q_671089095, q_671089095_Idx);
      framePtr = F.prev;

      
    }

  var F = {procname: "quill.init", prev: framePtr, filename: "/home/runner/Quill/src/quill.nim", line: 0};
  framePtr = F;
    F.line = 228;
    F.filename = "quill.nim";
    eventElement_671088748(q_671089095[q_671089095_Idx]).addEventListener("input", HEX3Aanonymous_671089096, false);
    F.line = 231;
    q_671089095[q_671089095_Idx].onDraw(q_671089095, q_671089095_Idx, text_671088754(q_671089095[q_671089095_Idx]), false);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_536870969(q_536870970, q_536870970_Idx, str_536870971, isDel_536870972) {
      var Temporary2;
      var Temporary3;
      var Temporary4;

  var F = {procname: "main.:anonymous", prev: framePtr, filename: "/home/runner/Quill/tests/main.nim", line: 0};
  framePtr = F;
    F.line = 18;
    F.filename = "main.nim";
    var txt_536870973 = document.createElement("span");
    F.line = 19;
    var color_536870974 = genRandomColor_536870919();
    F.line = 20;
    Label1: {
      F.line = 20;
      var fmtRes_536870979 = [mnewString(0)];
      F.line = 20;
      fmtRes_536870979[0].push.apply(fmtRes_536870979[0], [99,111,108,111,114,58,32]);;
      F.line = 20;
      formatValue_536870980(fmtRes_536870979, 0, color_536870974);
    };
    txt_536870973.setAttribute("style", toJSStr(fmtRes_536870979[0]));
    F.line = 21;
    txt_536870973.appendChild(document.createTextNode(str_536870971));
    F.line = 22;
    draw_671089116(q_536870970, q_536870970_Idx, txt_536870973);
    if (!(((((Temporary2 = text_671088754(q_536870970[q_536870970_Idx]), Temporary2)) == null ? 0 : (Temporary2).length) == 0))) {
    if ((((Temporary4 = text_671088754(q_536870970[q_536870970_Idx]), Temporary4).charCodeAt(chckIndx(subInt((((Temporary3 = text_671088754(q_536870970[q_536870970_Idx]), Temporary3)) == null ? 0 : (Temporary3).length), 1), 0, (Temporary4).length - 1)) == 10) && !(isDel_536870972))) {
    F.line = 26;
    insert_671089150(q_536870970, q_536870970_Idx, "Hey you made a newline!");
    F.line = 27;
    enter_671089119(q_536870970, q_536870970_Idx, ((str_536870971) == null ? 0 : (str_536870971).length));
    }
    
    }
    
  framePtr = F.prev;

  
}
var F = {procname: "module main", prev: framePtr, filename: "/home/runner/Quill/tests/main.nim", line: 0};
framePtr = F;
F.line = 14;
F.filename = "main.nim";
var myquill_536870968 = [newQuill_671088666(document.getElementById("quill"), "70vh")];
F.line = 15;
textHEX3D_671088757(myquill_536870968, 0, "Hello world");
F.line = 16;
myquill_536870968[0].onDraw = HEX3Aanonymous_536870969;
F.line = 29;
initGutter_1174405126(myquill_536870968, 0);
F.line = 30;
init_671089094(myquill_536870968, 0);
F.line = 31;
rawEcho([83,101,116,117,112,32,67,111,109,112,108,101,116,101,33]);
framePtr = F.prev;
var F = {procname: "module main", prev: framePtr, filename: "/home/runner/Quill/tests/main.nim", line: 0};
framePtr = F;
framePtr = F.prev;
